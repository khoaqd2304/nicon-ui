@using Nop.Admin.Models.Construction
@model  ConstructionsAdModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Configuration.Activities").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Construction");
}
@Html.AntiForgeryToken()
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.ContentManagement.Construction")
    </h1>
    <div class="pull-right">
        <a href="@Url.Action("Create")" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>


















    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.KeyWork)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.KeyWork)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.LanguageId)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopDropDownListFor(model => model.LanguageId, Model.AvailableLanguages)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="search-works" class="btn btn-primary">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="templates-grid-projects-under-construction"></div>
                    <script>
                        $(document).ready(function () {
                            $("#templates-grid-projects-under-construction").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("GetAllConstructions", "CompletedProjects"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                            id: "Id",
                                            fields: {
                                                Title: { editable: true, type: "string" },
                                                DisplayOrder: { editable: true, type: "number" },
                                                Id: { editable: false, type: "number" }
                                            }
                                        }
                                    },
									 sort: {
            field: "DisplayOrder", // The field to sort by
            dir: "desc" // or "desc" for descending order
        },
                                    requestEnd: function (e) {
                                        if (e.type == "create" || e.type == "update") {
                                            this.read();
                                        }
                                    },
                                    error: function (e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: false
                                },
                                sortable: {
                                    mode: "multiple",
                                    allowUnsort: true,
                                    showIndexes: true
                                },
                                groupable: true,
                                  pageable: {
                                refresh: true,
                                    pageSizes: [@(gridPageSizes)],
                                    @Html.Partial("_GridPagerMessages")
                                },
                                toolbar: [{ name: "create", text: "@T("Admin.Common.AddNewRecord")" }],
                                scrollable: false,
                                columns: [
                                    {
                                field: "UrlImage",
                                        title: "@T("Admin.ContentManagement.CustomerWork.Fields.UrlImage")",
                                        template: '<img src="#=UrlImage#" style="width:100px" />',
                                    }, {
                                field: "LanguageName",
                                        title: "@T("Admin.ContentManagement.Common.Fields.Language")",
                                        width: 200,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                    }, {
                                field: "Title",
                                        title: "@T("Admin.ContentManagement.Common.Fields.Title")",
                                        width: 200
                                    }
                                    , {
                                field: "DisplayOrder",
                                        title: "@T("Admin.ContentManagement.CustomerWork.Fields.DisplayOrder")",
                                        width: 100,
                                    }, 
                                     {
                                field: "IsActive",
                                        title: "@T("Admin.ContentManagement.CustomerWork.Fields.IsActive")",
                                        width: 100,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '# if(IsActive) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                    }, {
                                field: "CreateDate",
                                        title: "@T("Admin.ContentManagement.CustomerWork.Fields.CreatedOn")",
                                        width: 200,
                                        type: "date",
                                        format: "{0:G}",
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                    },{
                                field: "UpdateDate",
                                        title: "@T("Admin.ContentManagement.CustomerWork.Fields.UpdateDate")",
                                        width: 200,
                                        type: "date",
                                        format: "{0:G}",
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                    },
                                    {
                                field: "Id",
                                        title: "@T("Admin.Common.Process")",
                                        width: 100,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '<a class="btn btn-default" href="/Admin/CompletedProjects/Edit/#=Id#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a><button class="btn bg-red delete-works-modal" data-id="#=Id#"><i class="fa fa-trash-o"></i>@T("Admin.Common.Delete")</button>'
                                    }
                                ],
                                    command: [{
                                        name: "edit",
                                        text: {
                                            edit: "@T("Admin.Common.Edit")",
                                            update: "@T("Admin.Common.Update")",
                                            cancel: "@T("Admin.Common.Cancel")"
                                        }
                                    }, {
                                        name: "destroy",
                                        text: "@T("Admin.Common.Delete")"
                                    }],
                            });
                        });
                    </script>
                    <script type="text/javascript">
                        $(document).ready(function () {
                            //search button
                            $('#search-works').click(function () {
                                //search
                                var grid = $("#templates-grid-projects-under-construction").data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                return false;
                            });
                        });
                        function additionalData() {
                            var data = {
                                KeyWork: $('#KeyWork').val(),
                                LanguageId: $('#LanguageId').val(),
                            };
                            addAntiForgeryToken(data);
                            return data;
                        }

                        $(document).on('click', '.delete-work', function () {
                            var postData = { Id: $('.data-modal-works').data('id') };
                            addAntiForgeryToken(postData);
                            $.ajax({
                                cache: false,
                                type: 'POST',
                                url: '/Admin/CompletedProjects/DeleteConstruction',
                                data: postData,
                                dataType: 'json',
                                success: function (datas) {
                                    if (datas > 0) {
                                        MsgSuccess('Thông báo', 'Thao tác thành công', 3000);
                                        $('#works-delete-confirmation').modal("hide");
                                    }
                                    else MsgDanger('Thông báo', 'Lỗi cập nhật tin', 3000);
                                },
                                failure: function (message) {
                                    MsgDanger('Thông báo', 'Lỗi cập nhật tin', 3000);
                                    console.log("Error:" + message);
                                }
                            });
                        });
                        $(document).on('click', ".delete-works-modal", function () {
                            $('#works-delete-confirmation').modal("show");
                            $('.data-modal-works').attr('data-id', $(this).data('id'));
                        });

                    </script>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_ConfirmationDelete")