@using Nop.Admin.Models.Timeline
@model TimelineModel

@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)



















<script>
    $(document).ready(function () {
        bindBootstrapTabSelectEvent('news-edit');
    });
</script>
<div class="content">
    <div class="form-horizontal">
        <div id="news-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("Admin.ContentManagement.Timeline.NewsItems.Info"), true)
                @Html.RenderBootstrapTabHeader("tab-item", @T("Admin.ContentManagement.Timeline.NewsItems.TimelineItem"))
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
                @Html.RenderBootstrapTabContent("tab-item", @TabItem())
            </div>
        </div>
    </div>
</div>
@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "news-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab name*@
<input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">

@helper TabInfo()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.LanguageId)
                        @Html.HiddenFor(model => model.Id)
                    </div>
                    <div class="col-md-9">
                        @Html.NopDropDownListFor(model => model.LanguageId, Model.AvailableLanguages)
                        @Html.ValidationMessageFor(model => model.LanguageId)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.Title)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.Title, required: true)
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.Short)
                    </div>
                    <div class="col-md-9">
                        <div class="input-group input-group-required">
                            @Html.EditorFor(x => x.Short, "RichEditor")
                            <div class="input-group-btn">
                                @Html.RequiredHint()
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.Short)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.Published)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.Published)
                    </div>
                </div>
                @if (Model.Id > 0)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.CreateDate)
                        </div>
                        <div class="col-md-9 padding-date">
                            @Model.CreateDate
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.UpdateDate)
                        </div>
                        <div class="col-md-9 padding-date">
                            @Model.UpdateDate
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
@helper TabItem()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                @if (Model.Id > 0)
                {
                    <div class="form-group">
                        <div class="col-md-12">
                            <button  type="button" class="btn-add-timeline-item btn btn-sm bg-blue pull-right">
                                <i class="fa fa-plus-square"></i>
                                @T("Admin.Common.AddNew")
                            </button>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12" id="list-timeline-item" style="height:500px;overflow-x:hidden">
                            @Html.Action("ListTimeLineItem", "TimeLine", new { id = Model.Id})
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <div class="col-md-12">
                            <p>@T("Admin.ContentManagement.Timeline.SaveBeforeEdit")</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
@Html.Partial("_AddOrUpdateTimeLineItem")
<script>

    $(document).on('click', ".btn-add-timeline-item", function () {
        var $year = $('#Year'), $displaynumber = $("#DisplayNumber"), $shortItem = $('#ShortItem');
        $year.removeClass('error'); $shortItem.removeClass('error'); $displaynumber.removeClass('error');
        $('.img-timeline-item').addClass('hidden')
        $('#timeline-add-update').modal("show");
    });

    var valitateform = function () {
        var check = false;
        var $year = $('#Year'), $displaynumber = $("#DisplayNumber"), $shortItem = $('#ShortItem');
        if ($year.val().trim() == '') { $year.addClass('error'); check = true; }
        else $year.removeClass('error');
        if ($displaynumber.val().trim() == '') { $displaynumber.addClass('error'); check = true; }
        else $displaynumber.removeClass('error');
        if ($shortItem.val().trim() == '') { $shortItem.addClass('error'); check = true; }
        else $shortItem.removeClass('error');
        return check;
    }

    var reloadlist = function () {
        var postData = { Id: @Model.Id };
        addAntiForgeryToken(postData);
        $.ajax({
            cache: false,
            type: 'POST',
            url: '/Admin/TimeLine/GetListTimeLineItem',
            data: postData,
            dataType: 'html',
            success: function (datas) {
                $('#list-timeline-item').empty().append(datas);
            },
            failure: function (message) {
                MsgDanger('Thông báo', 'Lỗi cập nhật tin', 3000);
                console.log("Error:" + message);
            }
        });
    }

    var getitemlineitem = function (id) {
        var postData = { Id: id };
        addAntiForgeryToken(postData);
        $.ajax({
            cache: false,
            type: 'POST',
            url: '/Admin/TimeLine/GetTimeLineItemById',
            data: postData,
            dataType: 'JSON',
            success: function (datas) {
                if (datas != null) {
                    $('#TimelineItemId').val(datas.Id);
                    $('#PictureId').val(datas.PictureId);
                    $('#Year').val(datas.Year);
                    $('#DisplayNumber').val(datas.OrderBy);;
                    $('#ShortItem').val(datas.Description);
                    $('#IsActive').attr("checked", datas.IsActive);
                    $('.img-timeline-item').removeClass('hidden').find('img').attr('src', datas.UrlPicture )
                }
            },
            failure: function (message) {
                MsgDanger('Thông báo', 'Lỗi cập nhật tin', 3000);
                console.log("Error:" + message);
            }
        });
    }
    // edit
    $(document).on('click', '.btn-edit-timelineitem', function () {
        getitemlineitem($(this).data('id'));
        $('#timeline-add-update').modal("show");
    })
    // delete
    $(document).on('click', '.btn-delete-timelineitem', function () {
        var postData = { Id: $(this).data('id') };
        addAntiForgeryToken(postData);
        $.ajax({
            cache: false,
            type: 'POST',
            url: '/Admin/TimeLine/DeleteTimeLineItem',
            data: postData,
            dataType: 'JSON',
            success: function (datas) {
                if (datas > 0) {
                    reloadlist();
                    MsgSuccess('Thông báo', 'Thao tác thành công', 3000);
                }
                else {
                    MsgDanger('Thông báo', 'Thao tác lỗi', 3000);
                }
            },
            failure: function (message) {
                MsgDanger('Thông báo', 'Lỗi hệ thống', 3000);
                console.log("Error:" + message);
            }
        });
    })

    /// delect image
    $(document).on('click', '#delete-image-timeline', function () {
        $(this).closest('.img-timeline-item').addClass('hidden').find('img').attr('src', '');
        $('#PictureId').val(0);
    })
    // add time line item
    $(document).on('click', '.add-update-timeline-item', function () {
        if (valitateform()) { MsgWarning('Thông báo', 'Nhập thông tin', 3000); return; };// validate = true
        var $modelfiles = getFileUpload();
        var $model = {
            Id: $('#TimelineItemId').val(),
            TimelineHistoryId: $('#Id').val(),
            Year: $('#Year').val(),
            IsActive: $('#IsActive').val(),
            Description: $("#ShortItem").val(),
            //ShortItem: $("#ShortItem_ifr").contents().find("body").html(),
            PictureId: $('#PictureId').val(),
            OrderBy: $('#DisplayNumber').val()
        }
        $modelfiles.append('model', JSON.stringify($model));
        //addAntiForgeryToken($modelfiles);
        $.ajax({
            cache: false,
            type: 'POST',
            url: '/Admin/TimeLine/AddUpdateTimeLineItem',
            data: $modelfiles,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (datas) {
                if (datas > 0) {
                    reloadlist();
                    MsgSuccess('Thông báo', 'Cập nhật thành công', 3000);
                    $('#timeline-add-update').modal('hide');
                    resetvalue();
                }
                else MsgDanger('Thông báo', 'Lỗi cập nhật', 3000);
            },
            failure: function (message) {
                MsgDanger('Thông báo', 'Lỗi hệ thống', 3000);
                console.log("Error:" + message);
            }
        });
    });

    var resetvalue = function () {
        $('#TimelineItemId').val(0);
        $('#PictureId').val(0);
        $('#Year').val("");
        $('#DisplayNumber').val(0);
        $('#ShortItem').val("");
        $('#IsActive').attr("checked", true);
        Dropzone.forElement('.dropzone-submit-form-one').removeAllFiles(true);
    }
    // get file
    var getFileUpload = function () {
        var fd = new FormData($('#form-timeline').get(0));
        var forms = $('.dropzone-submit-form-one');
        $.each(forms, function (j, drz) {
            var qaDropzone = drz.dropzone;
            var files = qaDropzone.getAcceptedFiles();
            $.each(files, function (k, file) {
                fd.append('file-' + j + '-' + k, file);
                $('#PictureId').val(0);
            });
        });
        return fd;
    }
</script>


